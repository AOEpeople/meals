version: '3'

services:
  app:
    image: "${IMAGE_APP:-aoepeople/meals:edge}"
    build:
      context: .
      cache_from:
        - aoepeople/meals:latest
    depends_on:
      - db
    links:
      - db
    ports:
      - "8033:80"
    environment:
      - SYMFONY_ENV=devbox
      # - ...
    volumes:
      - ./app/build:/var/www/html/app/build

  dev:
    image: "${IMAGE_DEV:-aoepeople/meals:edge}"
    build:
      context: .
      dockerfile: Dockerfile.dev
      cache_from:
        - aoepeople/meals:dev
    depends_on:
      - db
      - mail
    ports:
      - "8034:80"
    environment:
      - SYMFONY_ENV=devbox
      # - ...
    volumes:
      - ./app/build:/var/www/html/app/build

  db:
    image: "${IMAGE_DB:-aoepeople/meals-test-db:latest}"
    build:
      context: docker/db
    command: --sql_mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" --default-authentication-plugin=mysql_native_password
    volumes:
      - /var/lib/mysql
    healthcheck:
      test: out=$$(mysqladmin ping -h localhost -P 3306 -u db --password=db 2>&1); echo $$out | grep 'mysqld is alive' || { echo $$out; exit 1; }
    environment:
      - MYSQL_ROOT_PASSWORD=db
      - MYSQL_DATABASE=db
      - MYSQL_USER=db
      - MYSQL_PASSWORD=db

  mail:
    image: mailhog/mailhog
    logging:
      driver: 'none'
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

  deployer:
    image: "${IMAGE_DEPLOYER:-aoepeople/meals-deployer:edge}"
    build:
      context: docker/deployer
    volumes:
      - ~/.kube:/root/.kube
