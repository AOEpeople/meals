version: '3'

services:
  app:
    image: "aoepeople/meals:${VERSION_APP:-latest}"
    build:
      context: .
    depends_on:
      - db
    links:
      - db
    ports:
      - "8033:80"
      - "443:443"
    environment:
      - SYMFONY_ENV=staging
      # - ...
    volumes:
      - ./app/build:/var/www/html/app/build

  dev:
    image: "aoepeople/meals:${VERSION_APP_DEV:-dev}"
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
    depends_on:
      - db
    links:
      - db
    ports:
      - "8034:80"
      - "443:443"
    environment:
      - SYMFONY_ENV=staging
      # - ...
    volumes:
      - ./app/build:/var/www/html/app/build

  db:
    image: "aoepeople/meals-test-db:${VERSION_DB:-latest}"
    build:
      context: docker/db
    command: --sql_mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" --default-authentication-plugin=mysql_native_password
    volumes:
      - /var/lib/mysql
    healthcheck:
      test: out=$$(mysqladmin ping -h localhost -P 3306 -u db --password=db 2>&1); echo $$out | grep 'mysqld is alive' || { echo $$out; exit 1; }
    environment:
      - MYSQL_ROOT_PASSWORD=db
      - MYSQL_DATABASE=db
      - MYSQL_USER=db
      - MYSQL_PASSWORD=db
